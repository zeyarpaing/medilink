// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  // If you want to use Prisma Migrate, you will need to manually create a shadow database
  // https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
  // make sure to append ?connect_timeout=10 to the connection string
  // shadowDatabaseUrl = env(“SHADOW_DATABASE_URL”)
}

model Transaction {
  id            Int      @id @default(autoincrement())
  paymentMethod String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  Booking       Booking?
}

model Booking {
  id            Int         @id @default(autoincrement())
  schedule      Schedule    @relation(fields: [scheduleId], references: [id])
  scheduleId    Int
  username      String
  email         String
  phone         String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transactionId Int         @unique
}

model Schedule {
  id         Int       @id @default(autoincrement())
  date       DateTime
  time       DateTime
  duration   Int
  Service    Service?  @relation(fields: [serviceId], references: [id])
  serviceId  Int?
  maxBooking Int
  Booking    Booking[]
}

model Service {
  id                   Int                 @id @default(autoincrement())
  name                 String
  image                String
  description          String
  HealthcareProvider   HealthcareProvider? @relation(fields: [healthcareProviderId], references: [id])
  healthcareProviderId Int?
  schedule             Schedule[]
}

model HealthcareProvider {
  id          Int       @id @default(autoincrement())
  name        String
  address     String
  phone       String
  email       String
  image       String
  type        String
  description String
  services    Service[]
}
